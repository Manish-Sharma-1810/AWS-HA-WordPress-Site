AWSTemplateFormatVersion: '2010-09-09'
Description: Launch a Ubuntu Server 24.04 LTS (HVM) (64_x86) on an EC2 instance in a private subnet in the us-east-1 region, and setup the MySQL database on it.

Parameters:
  NameOfService:
    Description: The name of the service this stack is to be used for
    Type: String
    Default: MySQL-Server
  EnvironmentName:
    Description: Name of the environment
    Type: String
    Default: dev
    AllowedValues:
      - dev
      - prod
      - test
  DeploymentBucket:
    Description: Name of the deployment bucket
    Type: String
    Default: dev-wordpress-setup-1
  InstanceTypeParam:
    Description: Type of the EC2 instance
    Type: String
    Default: t3.micro
    AllowedValues:
      - t2.micro
      - t2.small
      - t2.medium
      - t3.micro
      - t3.small
      - t3.medium
Mappings:
  RegionAMIConfig:
    us-east-1:
      AMI: ami-04b70fa74e45c3917
    us-east-2:
      AMI: ami-09040d770ffe2224f
    ap-south-1:
      AMI: ami-0f58b397bc5c1f2e8
Resources:
  MySSMParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Description: Name of the deployment bucket
      Name: deployment-bucket
      Tier: Standard
      Type: String
      DataType: text
      Value: !Ref DeploymentBucket
      Tags:
        Name: deployment-bucket
        Environment: !Ref EnvironmentName
  MyEC2DatabaseInstance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: !Ref InstanceTypeParam
      ImageId: !FindInMap
        - RegionAMIConfig
        - !Ref AWS::Region
        - AMI
      Monitoring: true
      IamInstanceProfile: !ImportValue
        Fn::Sub: ${EnvironmentName}-ec2-instance-profile
      NetworkInterfaces:
        - AssociatePublicIpAddress: false
          DeleteOnTermination: true
          Description: Primary network interface
          DeviceIndex: 0
          GroupSet:
            - !ImportValue
              Fn::Sub: ${EnvironmentName}-ec2-security-group-id
          SubnetId: !ImportValue
            Fn::Sub: ${EnvironmentName}-private-subnet1-id
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-${NameOfService}
        - Key: RegionName
          Value: !Ref AWS::Region
        - Key: Environment
          Value: !Ref EnvironmentName
      UserData: !Base64
        Fn::Sub: |
          #!/bin/bash
          apt update -y
          apt upgrade -y
          apt install jq -y
          apt install python3-pip unzip less -y
          curl -s "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip -q awscliv2.zip
          ./aws/install
          rm -r awscliv2.zip
          TOKEN=$(curl -X PUT "http://169.254.169.254/latest/api/token" -H "X-aws-ec2-metadata-token-ttl-seconds: 21600")
          LOCAL_IP=$(curl -H "X-aws-ec2-metadata-token: $TOKEN" -v http://169.254.169.254/latest/meta-data/local-ipv4)
          aws s3 cp s3://${DeploymentBucket}/wordpress-site/database/ /home/ubuntu/wordpress-site/database/ --recursive
          chmod +x /home/ubuntu/wordpress-site/database/mysql_setup.sh
          MYSQL_WP_USER=wp_user DB_HOST=$LOCAL_IP /home/ubuntu/wordpress-site/database/mysql_setup.sh
Outputs:
  AccountId:
    Description: AWS Account ID
    Value: !Ref AWS::AccountId
  RegionName:
    Description: AWS Region Name
    Value: !Ref AWS::Region
  StackId:
    Description: Current Stack ID
    Value: !Ref AWS::StackId
  StackName:
    Description: Current Stack Name
    Value: !Ref AWS::StackName
  InstanceId:
    Description: ID of the EC2 instance
    Value: !Ref MyEC2DatabaseInstance
    Export:
      Name: !Sub ${EnvironmentName}-instance-id
  AMIId:
    Description: ImageId of the AMI
    Value: !FindInMap
      - RegionAMIConfig
      - !Ref AWS::Region
      - AMI
  VpcId:
    Description: VPC ID of the EC2 instance
    Value: !GetAtt MyEC2DatabaseInstance.VpcId
  SubnetId:
    Description: Subnet ID of the EC2 instance
    Value: !GetAtt MyEC2DatabaseInstance.SubnetId
  InstanceSecurityGroupId:
    Description: Security Group ID of the EC2 instance
    Value: !ImportValue
      Fn::Sub: ${EnvironmentName}-ec2-security-group-id
  SSMParameter:
    Description: SSM Parameter for the deployment bucket
    Value: !Ref MySSMParameter
    Export:
      Name: deployment-bucket-ssm-parameter